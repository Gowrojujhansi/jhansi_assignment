1.public class Customer
    private int customerId;
	private String customerName;
	private int customerContact;
	private Address address;
	
	public int getCustomerId() {
		return customerId;
	}
	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}
	public String getCustomerName() {
		return customerName;
	}
	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}
	public int getCustomerContact() {
		return customerContact;
	}
	public void setCustomerContact(int customerContact) {
		this.customerContact = customerContact;
	}
	public Address getAddress() {
		return address;
	}
	public void setAddress(Address address) {
		this.address = address;
	}
	
	
	public Customer() {
		super();
		// TODO Auto-generated constructor stub
	}
	@Override
	public String toString() {
		return "Customer [customerId=" + customerId + ", customerName=" + customerName + ", customerContact="
				+ customerContact + ", address=" + address + "]";
	}
	}
	
----------------------------------------------------------------------------------------------------------

package com.springcore;

public class Address {
	
		private String streetName;
		private String cityName;
		private String stateName;
		private int zipId;
		private String countryName;
		public String getStreetName() {
		return streetName;
		}
		public void setStreetName(String streetName) {
			this.streetName = streetName;
		}
		public String getCityName() {
			return cityName;
		}
		public void setCityName(String cityName) {
			this.cityName = cityName;
		}
		public String getStateName() {
			return stateName;
		}
		public void setStateName(String stateName) {
			this.stateName = stateName;
		}
		public int getZipId() {
			return zipId;
		}
		public void setZipId(int zipId) {
			this.zipId = zipId;
		}
		public String getCountryName() {
			return countryName;
		}
		public void setCountryName(String countryName) {
			this.countryName = countryName;
		}
		public Address() {
			super();
			// TODO Auto-generated constructor stub
		}
		@Override
		public String toString() {
			return "Address [streetName=" + streetName + ", cityName=" + cityName + ", stateName=" + stateName
					+ ", zipId=" + zipId + ", countryName=" + countryName + "]";
		}

}

		-------------------------------------------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:context=  "http://www.springframework.org/schema/context"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd ">
    
    

   <!-- customer -->
   <bean class="com.springcore.Address" name= "add">
    <property name = "streetName" value="codingStreet"/>
     <property name = "cityName" value="mumbai"/>
      <property name = "stateName" value="maha"/>
      <property name = "zipId" value="400001"/>
       <property name = "countryName" value="India"/>
  
       
        </bean>
        
        <!-- Address  -->
   <bean class="com.springcore.Customer" name= "customer">
      <property name = "customerId" value="1001"/>
      <property name = "customerName" value="Sharm"/>
      <property name = "customerContact" value="98675432"/>
      <property name = "address">
           <ref bean= "add" />
           </property>
            
       
      
      
   </bean>
        

</beans>
-------------------------------------------------------------------------------
package com.springcore;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


public class App 
{
    public static void main( String[] args )
    {
     ApplicationContext context=new  ClassPathXmlApplicationContext("com/springcore/config.xml");
     Customer customer = (Customer) context.getBean("customer");
     System.out.println(customer);
    }
}


2.3.Banking 

ActBank.java

package com.java.bank;

public class ActBank {

	public int accountId;
	public String accountHolderName;
	public String accountType;
	public long accountBalance;
	public int getAccountId() {
		return accountId;
	}
	public void setAccountId(int accountId) {
		this.accountId = accountId;
	}
	public String getAccountHolderName() {
		return accountHolderName;
	}
	public void setAccountHolderName(String accountHolderName) {
		this.accountHolderName = accountHolderName;
	}
	public String getAccountType() {
		return accountType;
	}
	public void setAccountType(String accountType) {
		this.accountType = accountType;
	}
	public long getAccountBalance() {
		return accountBalance;
	}
	public void setAccountBalance(long accountBalance) {
		this.accountBalance = accountBalance;
	}
	
	  public void showBankAccountDetails(){
	        System.out.println("Account Id : " + accountId);
	        System.out.println("Account Holder Name : " + accountHolderName);
	        System.out.println("AccountType : " + accountType);
	        System.out.println("AccountBalance : " + accountBalance);

	    }	
}
-------------------------------------------------------------------------------------
ActBankR.java
package com.java.bank;

public interface ActBankR{

	public double getBalance(long accountId);
	public double updateBalance(long accountId, double newBalance);	
}
----------------------------------------------------------------------------------------
BankActRImpl.java

package com.java.bank;
public abstract class BankActRImpl implements ActBankR {
	
	private void BankAccRepositoryImpl(){
	  ActBank bankaccount = new ActBank();
	  bankaccount.setAccountHolderName("Mounika");
	  bankaccount.setAccountId(65);
	  bankaccount.setAccountType("Savings");
	  bankaccount.setAccountBalance((long) 20345.5);


	}
}

-----------------------------------------------------------------------------------------
BankAccService.java

package com.java.bank;

public interface BankAccService {
public double withdraw(long accountId, double balance);
public double deposit(long accountId, double balance);
public double getBalance(long accountId);
public boolean fundTransfer(long fromAccount, long toAccount, double account);

}
-------------------------------------------------------------------------------------------
BankAccServiceImpl.java

package com.java.bank;

public abstract class BankAccServiceImpl implements BankAccService{
	long accountId;
	double balance;
	long fromAccount;
	long toAccount;
	double account;
	
	public void withdraw() {
		System.out.println("AccounntId" +accountId);
		System.out.println("Balance" +balance);
	}
	
	public void balance() {
		System.out.println("AccounntId" +accountId);
		System.out.println("Balance" +balance);
	}
	
	public void deposit() {
		System.out.println("AccounntId" +accountId);
		System.out.println("Balance" +balance);
	}
	
	public void fundTransfer() {
		System.out.println("AccounntId" +accountId);
		System.out.println("Balance" +balance);
	}
	
	
}
---------------------------------------------------------------------
ActBankC.java

package com.java.bank;

public class ActBankC{

	
	BankAccServiceImpl bankaccountS = new BankAccServiceImpl() {
		
		public double withdraw(long accountId, double balance) {
			
			return withdraw(15000,1500);
		}
		
		public double getBalance(long accountId) {
			
			return getBalance(150);
		}
		
		public boolean fundTransfer(long fromAccount, long toAccount, double aount) {
			
			return false;
		}
		
		public double deposit(long accountId, double balance) {
		
			return deposit(15000, 1500);
		}
	};

	public void withdraw() {
		
		return;
	}
	
	
}
-----------------------------------------------------------------------------------------------------------
one.java

package com.java.bank;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;  


public class one
{
    public static void main( String[] args )
    {
    	ApplicationContext applicationcontext=new ClassPathXmlApplicationContext("applicationC.xml");  
        ActBankC obj=(ActBankC)applicationcontext.getBean("obj");  
        obj.withdraw();     
        }
}
-----------------------------------------------------------------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>

<beans  
    
xmlns="http://www.springframework.org/schema/beans"  
    
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    
xmlns:p="http://www.springframework.org/schema/p"  
    
xsi:schemaLocation="http://www.springframework.org/schema/beans   

http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  
 
 
<!-- <bean id="b" class="com.Auowire.Auowire.BankAccountController"></bean>   
-->
<bean id="obj" class="com.java.bank.BankAccountController" autowire="byName">


</bean>  
  

</beans> 


7.SPEL

Demo.java

package com.java.spel;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

@Component
public class Demo {
	
	@Value("#{ 22+11 }")
	private int x;
	
	@Value("#{ 20 }")
	private int y;
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	@Override
	public String toString() {
		return "Demo [x=" + x + ", y=" + y + "]";
	}
	
	
}
----------------------------------------------------------------------
Test.java

package com.java.spel;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		ApplicationContext context = new ClassPathXmlApplicationContext("com/java/spel/bean.xml");
		Demo d1 = context.getBean("demo",Demo.class);
		
		System.out.println(d1);

	}

}
----------------------------------------------------------------------------------
bean.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    
  <context:component-scan base-package="com.springcore.spel" />
   
</beans>

8.Write a Program For InitializingBean and DisposableBean

Person.java

package com.java.bean;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;
 
public class Person implements DisposableBean, InitializingBean {
 
    private String name;
 
    Person() {
        System.out.println("Constructor of person bean is invoked!");
    }
 
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
 
    //Bean initialization code
    public void afterPropertiesSet() throws Exception {
        System.out.println("Initializing method of person bean is invoked!");
    }
 
    //Bean destruction code
    public void destroy() throws Exception {
        System.out.println("Destroy method of person bean is invoked!");
    }
}

-------------------------------------------------------------------------------------------
Test.java

package com.java.bean;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		ConfigurableApplicationContext   context = new ClassPathXmlApplicationContext("com/java/bean/bean.xml");
		 
        Person myperson = context.getBean("personBean", Person.class);
 
        System.out.println("Name= " + myperson.getName());
 
        // Closing the context object.
        context.close();
    }
}


Bean.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    
    
    
    
    <bean name="personBean" class="com.java.bean.Person">
        <property name="name" value="Tom" />
    </bean>
    
    
 </beans>

9.Complete Bean Life Cycle

Example.java

package com.java.lifecycle;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

public class Example {
	private String subject;

	public String getSubject() {
		return subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}

	public Example() {
		super();
		// TODO Auto-generated constructor stub
	}

	@Override
	public String toString() {
		return "Example [subject=" + subject + "]";
	}
	
	@PostConstruct
	public void start() {
		System.out.println("starting method");
	}
	
	@PreDestroy
	public void end() {
		System.out.println("ending method");
		
	}

}
-----------------------------------------------------------------------------
Test.java

package com.java.lifecycle;

import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Test {

	public static void main(String[] args) {
		
		AbstractApplicationContext context = new ClassPathXmlApplicationContext("com/java/lifecycle/bean.xml");
		
		context.registerShutdownHook();
		
		Example example=(Example) context.getBean("example");
		System.out.println(example);
		

	}

}
----------------------------------------------------------------------------------
bean.xml

<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:annotation-config />
    
    
    <bean class="com.bean.lifecycle.Example" name="example">
         <property name="subject" value="Maths" />
    </bean>
    
    
 </beans>


App.java

package com.java.org;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class App {

	public static void main(String[] args) {

		ApplicationContext context = new ClassPathXmlApplicationContext("bean.xml");

		Applicationclass n = (Applicationclass) context.getBean("noob");

		n.walk();

		Build a = (Build) context.getBean("pro");
		a.Slow();

	}

}
-------------------------------------------------------------------------------------------
Application.java

package com.java.org;

public class Application {

	public void go() {

		System.out.println("Groot");
	}

}
-------------------------------------------------------------------------------------------
ApplicationClass.java

package com.java.org;

public class Applicationclass {

	public void walk() {

		System.out.println("Hulk Walk");
	}

	
}
---------------------------------------------------------------------------------------------
Build.java

package com.java.org;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;

public class Build implements ApplicationContextAware {

	private ApplicationContext context;

	public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
		context = applicationContext;
	}

	public void Slow() {

		Application a = (Application) context.getBean("app");

		a.go();

	}

}

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.springcore</groupId>
  <artifactId>springcore</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>springcore</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>

 <!-- https://mvnrepository.com/artifact/org.springframework/spring-core -->
 <dependency>
 <groupId>Org.springframework</groupId>
 <artifactId>spring-core</artifactId>
 <version>5.2.3.RELEASE</version>
 </dependency>
 <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-context</artifactId>
    <version>5.2.3.RELEASE</version>
</dependency>
 
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>